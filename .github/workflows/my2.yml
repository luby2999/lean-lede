#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on: [push]
    #push:
     #branches: 
      #- master
  # schedule:
  #   - cron: 0 20 * * *
  # release:
  #   types: [published]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
      - name: 自定义插件
        run: |
          cd package
          mkdir openwrt-packages
          cd openwrt-packages
          git clone https://github.com/Lienol/openwrt-package.git
          
          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/host ./build_dir/host
          # mkdir -p ./build_dir/host && ln -s /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir
          df -h
      - name: Update feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          
             cat >> .config <<EOF 
             CONFIG_TARGET_brcm2708=y
             CONFIG_TARGET_brcm2708_bcm2710=y
             CONFIG_TARGET_brcm2708_bcm2710_DEVICE_rpi-3=y
             CONFIG_LIBSODIUM_MINIMAL=y
             CONFIG_PACKAGE_boost=y
             CONFIG_PACKAGE_boost-date_time=y
             CONFIG_PACKAGE_boost-program_options=y
             CONFIG_PACKAGE_boost-system=y
             CONFIG_PACKAGE_boost-system=y
             CONFIG_PACKAGE_brook=y
             CONFIG_PACKAGE_kcptun-client=y
             CONFIG_PACKAGE_libev=y
             CONFIG_PACKAGE_libsodium=y
             CONFIG_PACKAGE_libstdcpp=y
             CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Brook=y
             CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks=y
             CONFIG_PACKAGE_luci-app-passwall_INCLUDE_ShadowsocksR_socks=y
             CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Shadowsocks_socks=y
             CONFIG_PACKAGE_luci-app-passwall_INCLUDE_Trojan=y
             CONFIG_PACKAGE_luci-app-passwall_INCLUDE_kcptun=y
             CONFIG_PACKAGE_luci-theme-argon-mod=y
             CONFIG_PACKAGE_luci-theme-freifunk-generic=y
             CONFIG_PACKAGE_luci-theme-material=y
             CONFIG_PACKAGE_luci-theme-netgear-mc=y
             CONFIG_PACKAGE_luci-theme-openwrt=y
             CONFIG_PACKAGE_perl=y
             CONFIG_PACKAGE_perlbase-config=y
             CONFIG_PACKAGE_perlbase-essential=y
             CONFIG_PACKAGE_perlbase-re=y
             CONFIG_PACKAGE_perlbase-unicore=y
             CONFIG_PACKAGE_perlbase-utf8=y
             CONFIG_PACKAGE_shadowsocks-libev-config=y
             CONFIG_PACKAGE_shadowsocks-libev-ss-local=y
             CONFIG_PACKAGE_shadowsocks-libev-ss-redir=y
             CONFIG_PACKAGE_shadowsocksr-libev-ssr-local=y
             CONFIG_PACKAGE_trojan=y
             CONFIG_PACKAGE_wireless-tools=m
             CONFIG_PERL_NOCOMMENT=y 
             CONFIG_TARGET_ROOTFS_TARGZ=y
             CONFIG_boost-compile-visibility-hidden=y
             CONFIG_boost-runtime-shared=y
             CONFIG_boost-static-and-shared-libs=y
             CONFIG_boost-variant-release=y
             CONFIG_PACKAGE_ddns-scripts=y
             CONFIG_PACKAGE_etherwake=y
             CONFIG_PACKAGE_iptables-mod-filter=y
             CONFIG_PACKAGE_kmod-crypto-aead=y
             CONFIG_PACKAGE_kmod-crypto-ecb=y
             CONFIG_PACKAGE_kmod-crypto-hash=y
             CONFIG_PACKAGE_kmod-crypto-manager=y
             CONFIG_PACKAGE_kmod-crypto-null=y
             CONFIG_PACKAGE_kmod-crypto-pcompress=y
             CONFIG_PACKAGE_kmod-crypto-sha1=y
             CONFIG_PACKAGE_kmod-gre=y
             CONFIG_PACKAGE_kmod-ipt-filter=y
             CONFIG_PACKAGE_kmod-iptunnel=y
             CONFIG_PACKAGE_kmod-lib-textsearch=y
             CONFIG_PACKAGE_kmod-mppe=y
             CONFIG_PACKAGE_kmod-tcp-bbr=y
             CONFIG_PACKAGE_pptpd=y
             CONFIG_PACKAGE_rp-pppoe-common=y
             CONFIG_PACKAGE_rp-pppoe-relay=y
             CONFIG_PACKAGE_rp-pppoe-server=y
             CONFIG_PACKAGE_vlmcsd=y
             EOF

      - name: Make download
        run: |
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;
          df -h
      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt firmware
          path: ./bin/targets/
